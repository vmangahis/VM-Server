// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VM_Server.Repositories;

#nullable disable

namespace VM_Server.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20241113083753_NewExperienceSeed")]
    partial class NewExperienceSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VM_Server.Model.Experiences", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("vm_experiences");

                    b.HasData(
                        new
                        {
                            Id = new Guid("35c6b152-a07f-44a5-890f-b7e76fb6cf4b"),
                            Company = "DepEd Biñan City Division Information Office",
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9974),
                            EndDate = new DateOnly(2022, 7, 1),
                            RoleName = "Frontend Developer",
                            StartDate = new DateOnly(2022, 4, 1)
                        },
                        new
                        {
                            Id = new Guid("16543560-d199-45ca-a89e-62939525fb93"),
                            Company = "Upwork",
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9980),
                            EndDate = new DateOnly(2023, 1, 1),
                            RoleName = "Freelance Web Developer",
                            StartDate = new DateOnly(2020, 9, 1)
                        },
                        new
                        {
                            Id = new Guid("05dd9635-f9a6-429f-b2e9-b3dbb4d38ad3"),
                            Company = "Upwork",
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9983),
                            EndDate = new DateOnly(2023, 1, 1),
                            RoleName = "Freelance Virtual Assistant",
                            StartDate = new DateOnly(2020, 9, 1)
                        },
                        new
                        {
                            Id = new Guid("c6abd0a3-ce38-4689-aaa4-d298de5da4cd"),
                            Company = "Infor PSSC Inc.",
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9987),
                            EndDate = new DateOnly(2024, 6, 1),
                            RoleName = "Associate Software Engineer",
                            StartDate = new DateOnly(2023, 2, 13)
                        },
                        new
                        {
                            Id = new Guid("a8af479c-e5c3-443b-8d89-5606e4bfbdf9"),
                            Company = "Infor PSSC Inc.",
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9990),
                            RoleName = "Software Engineer",
                            StartDate = new DateOnly(2023, 6, 1)
                        });
                });

            modelBuilder.Entity("VM_Server.Model.Projects", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageLink")
                        .HasColumnType("text");

                    b.Property<string>("ProjectLink")
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vm_projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0adcd973-d932-4802-a980-0275f7393d63"),
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9640),
                            ImageLink = "https://res.cloudinary.com/dg1bym3ax/image/upload/v1730954820/vmdev/fcc_bi4o7r.png",
                            ProjectLink = "https://github.com/vmangahis/Four-Color-Conjecture-Game",
                            ProjectName = "Four Color Conjecture Game"
                        },
                        new
                        {
                            Id = new Guid("7a41c941-6c46-4322-9ee4-51b0307c67ea"),
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9644),
                            ImageLink = "https://res.cloudinary.com/dg1bym3ax/image/upload/v1730954822/vmdev/beowulf_tfac0o.png",
                            ProjectLink = "https://github.com/vmangahis/beowulf",
                            ProjectName = "Beowulf"
                        },
                        new
                        {
                            Id = new Guid("2aea85d5-7837-49e3-9778-b80e24ccf4d6"),
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9647),
                            ImageLink = "https://res.cloudinary.com/dg1bym3ax/image/upload/v1730954820/vmdev/apt_jd51xf.png",
                            ProjectLink = "https://github.com/vmangahis/apartment-rental-system",
                            ProjectName = "Apartment Rental Management System"
                        },
                        new
                        {
                            Id = new Guid("3e5ad967-6383-4693-86ee-a31dfb6b2621"),
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9650),
                            ImageLink = "https://res.cloudinary.com/dg1bym3ax/image/upload/v1730954839/vmdev/kai_gb2jzi.png",
                            ProjectLink = "https://github.com/vmangahis/Kai",
                            ProjectName = "Kai"
                        });
                });

            modelBuilder.Entity("VM_Server.Model.Skills", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SkillDescription")
                        .HasColumnType("text");

                    b.Property<string>("SkillIdentifier")
                        .HasColumnType("text");

                    b.Property<string>("SkillName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vm_skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3a92a7e-f95c-40ea-af79-3831fae65dc2"),
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9829),
                            SkillIdentifier = "msql_server",
                            SkillName = "Microsoft SQL Server"
                        },
                        new
                        {
                            Id = new Guid("7a9b937d-5a12-43f6-927c-4c5944650986"),
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9834),
                            SkillIdentifier = "django",
                            SkillName = "Django"
                        },
                        new
                        {
                            Id = new Guid("70aa8218-7d37-4406-bad3-6db7f605e875"),
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9838),
                            SkillIdentifier = "postgresql",
                            SkillName = "PostgreSQL"
                        },
                        new
                        {
                            Id = new Guid("2b831bfa-492e-4200-a218-667bc6b500a3"),
                            CreatedDateTime = new DateTime(2024, 11, 13, 8, 37, 52, 960, DateTimeKind.Utc).AddTicks(9842),
                            SkillIdentifier = "dotnet",
                            SkillName = ".NET Core"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
