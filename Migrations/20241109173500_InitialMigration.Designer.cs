// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VM_Server.Repositories;

#nullable disable

namespace VM_Server.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20241109173500_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VM_Server.Model.Experiences", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("vm_experiences");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a2ec8c1-7a2c-4b69-9db5-f847a9f5fb69"),
                            Company = "DepEd Biñan City Division Information Office",
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(1562),
                            EndDate = new DateOnly(2022, 7, 1),
                            RoleName = "Frontend Developer",
                            StartDate = new DateOnly(2022, 4, 1)
                        },
                        new
                        {
                            Id = new Guid("ab4535ed-bef5-411b-b61e-44ae40b942d8"),
                            Company = "Upwork",
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(1571),
                            EndDate = new DateOnly(2023, 1, 1),
                            RoleName = "Freelance Web Developer",
                            StartDate = new DateOnly(2020, 9, 1)
                        },
                        new
                        {
                            Id = new Guid("184f23b8-766a-4f39-a30c-c236bfcd5f12"),
                            Company = "Upwork",
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(1575),
                            EndDate = new DateOnly(2023, 1, 1),
                            RoleName = "Freelance Virtual Assistant",
                            StartDate = new DateOnly(2020, 9, 1)
                        });
                });

            modelBuilder.Entity("VM_Server.Model.Projects", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageLink")
                        .HasColumnType("text");

                    b.Property<string>("ProjectLink")
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vm_projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8edb8be-5798-4579-8086-000714062317"),
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(820),
                            ImageLink = "https://res.cloudinary.com/dg1bym3ax/image/upload/v1730954820/vmdev/fcc_bi4o7r.png",
                            ProjectLink = "https://github.com/vmangahis/Four-Color-Conjecture-Game",
                            ProjectName = "Four Color Conjecture Game"
                        },
                        new
                        {
                            Id = new Guid("c2ed6d10-4d43-4fe8-8c32-f3dc100c238b"),
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(837),
                            ImageLink = "https://res.cloudinary.com/dg1bym3ax/image/upload/v1730954822/vmdev/beowulf_tfac0o.png",
                            ProjectLink = "https://github.com/vmangahis/beowulf",
                            ProjectName = "Beowulf"
                        },
                        new
                        {
                            Id = new Guid("259dc68f-e905-4d7e-9e9f-9ca9ccc0c8e3"),
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(841),
                            ImageLink = "https://res.cloudinary.com/dg1bym3ax/image/upload/v1730954820/vmdev/apt_jd51xf.png",
                            ProjectLink = "https://github.com/vmangahis/apartment-rental-system",
                            ProjectName = "Apartment Rental Management System"
                        },
                        new
                        {
                            Id = new Guid("fec3ee5d-578a-48b6-9cea-23f80914ff03"),
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(844),
                            ImageLink = "https://res.cloudinary.com/dg1bym3ax/image/upload/v1730954839/vmdev/kai_gb2jzi.png",
                            ProjectLink = "https://github.com/vmangahis/Kai",
                            ProjectName = "Kai"
                        });
                });

            modelBuilder.Entity("VM_Server.Model.Skills", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SkillDescription")
                        .HasColumnType("text");

                    b.Property<string>("SkillIdentifier")
                        .HasColumnType("text");

                    b.Property<string>("SkillName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vm_skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9141b775-f42b-459d-8469-1a1b05e299b8"),
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(1004),
                            SkillIdentifier = "msql_server",
                            SkillName = "Microsoft SQL Server"
                        },
                        new
                        {
                            Id = new Guid("4e2004ac-f795-4f0e-a2f6-69913969114e"),
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(1009),
                            SkillIdentifier = "django",
                            SkillName = "Django"
                        },
                        new
                        {
                            Id = new Guid("6ffe5b5b-1735-44ed-bd21-a83bcbb5e59b"),
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(1013),
                            SkillIdentifier = "postgresql",
                            SkillName = "PostgreSQL"
                        },
                        new
                        {
                            Id = new Guid("17e3e3bb-d431-4a40-ac8c-0b228163dc14"),
                            CreatedDateTime = new DateTime(2024, 11, 9, 17, 35, 0, 483, DateTimeKind.Utc).AddTicks(1016),
                            SkillIdentifier = "dotnet",
                            SkillName = ".NET Core"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
